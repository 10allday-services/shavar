###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/1.5-branch/narr/environment.html
###

[app:shavar]
use = egg:shavar

pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
    pyramid_debugtoolbar

# By default, the toolbar only appears for clients from IP addresses
# '127.0.0.1' and '::1'.
# debugtoolbar.hosts = 127.0.0.1 ::1

[filter:translogger]
use = egg:Paste#translogger
setup_console_handler = False

[pipeline:main]
pipeline = translogger
           shavar

###
# wsgi server configuration
###

[server:main]
use = egg:waitress#main
#host = 0.0.0.0
host = 127.0.0.1
port = 6543

[uwsgi]
http = 127.0.0.1:6543
processes = 4
threads = 2
pythonpath = local/bin
paste-logger = %p

[loggers]
keys = root, shavar

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_shavar]
level = DEBUG
handlers =
qualname = shavar

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
#format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
# The following will replicate production logging styles:
class = mozsvc.util.JsonLogFormatter

[heka]
logger = shavar
severity = 4
stream_class = heka.streams.UdpStream
stream_host = localhost
stream_port = 5565

[heka_plugin_raven]
provider = heka_raven.raven_plugin:config_plugin
dsn = udp://username:password@localhost:9001/2
override = True


[shavar]
# A newline separated list of the lists to be served.  The names given
# here will be used to locate the list specific configuration stanzas
# elsewhere in the INI file.
lists_served = dir://shavar/tests/lists_served_swagger
# The default protocol version to speak.  As yet, we only speak version
# 2 of the protocol even though it has been superceded by Google.
# Default value: 2
default_proto_ver = 2.0
# The root directory for the data files for lists if absolute path names
# are not provided in the list specific stanzas.  Not necessary if you
# provide absolute paths.
lists_root = tests
# In production, the shavar service has so much traffic that logging 200s from
# the app directly causes disk utilization issues.  A lame hack to make it
# possible to quiet the service.  Only affects HTTP 200s.
stfu_200_logging = False

# this is the public host and scheme to reach the service
# like https://shavar.stage.mozaws.net
# when not provided, uses X-Forwarded-Host then fallsback to HTTP_HOST
# and X-Forwarded-Proto for the scheme
host = shavar.stage.mozaws.net
scheme = https

[mozpub-track-digest256]
# The type of list data that will be shipped.  Presumably this has some
# greater impact on the client side but as yet, it isn't used for much
# other than making sure the list's name and type match.
#
# The technical difference between the shavar and digest256 list types
# is that digest256 formatted lists use the entire 32 byte SHA256 hash
# in the list data while shavar formatted list only send the first 4
# bytes of the 32 byte hash.  The client then queries the service if it
# encounters a match for a given hash prefix(the first 4 bytes) to
# retrieve the entire hash for a given prefix.
type = digest256
# URL or relative path to the source data for this list.  Possibilities
# at the moment include:
#
# relative/path/to/the/file
# /absolute/path/to/the/file
# file:///absolute/path/to/the/file
# s3+file:///s3_bucket_name/s3_key_name_which_can_include_slashes
#
# In this usage, "my_s3_bukkit" is the S3 bucket name and
# "faux/path/to/file/moz-abp-shavar.data" is the full key name.  This
# just permits slight simulation of a file name.
# source = s3+file:///my_s3_bukkit/faux/path/to/file/mozpub-track-digest256.data
#
# For basic testing, use the static testing data.
source = shavar/tests/chunk_source

[moz-abp-shavar]
# Firefox currently (as of 2015-07-13) allows digest256 lists to get away
# with breaking the safe browsing wire protocol slightly.  The protocol
# actually states that the service's response to a client request for
# updated data be formatted as a list of URLs to data files to be
# downloaded.
#
# With Firefox, digest256 changes can be served inline in the initial
# response.  Naughty Firefox.  No cookie.
#
type = shavar
# delta_chunk_source is part of the unit test suite and should always be
# available to test against.
source = shavar/tests/delta_chunk_source
# As a result of this use of URLs(referred to as redirects in the protocol
# specification document given at the top of the README), it is necessary
# for the service to know where the data files will be publicly reachable.
# This setting provides the base URL that, when combined with the path
# portion of the URL given in the `source` directive above, will be the
# redirect served in the response.
#
# Best practice: make sure it ends in a /
redirect_url_base = http://localhost:6543/data/
